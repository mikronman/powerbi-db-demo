name: Azure SQL â€“ Deploy

on:
  workflow_dispatch:
    inputs:
      includeSeeds:
        description: "Include seed data? 1=yes, 0=no"
        required: true
        default: "1"
        type: choice
        options: ["1", "0"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install sqlcmd
        run: |
          sudo ACCEPT_EULA=Y apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18 unixodbc-dev
          echo '/opt/mssql-tools18/bin' >> $GITHUB_PATH
      - run: sqlcmd -?

      # Guard: require the DB to already exist; do NOT create it
      - name: Verify database exists (must pre-exist)
        env:
          SQLCMDPASSWORD: ${{ secrets.AZURE_SQL_PASSWORD }}
        run: |
          sqlcmd -C -b -I \
            -S "${{ secrets.AZURE_SQL_SERVER }}" \
            -U "${{ secrets.AZURE_SQL_USER }}" \
            -d "master" \
            -Q "IF DB_ID(N'${{ secrets.AZURE_SQL_DB }}') IS NULL RAISERROR('Database [${{ secrets.AZURE_SQL_DB }}] not found on server.',16,1);"

      - name: Run deploy_all.sql (from db/scripts)
        working-directory: db/scripts
        env:
          SQLCMDPASSWORD: ${{ secrets.AZURE_SQL_PASSWORD }}
        run: |
          sqlcmd -C -b -I \
            -S "${{ secrets.AZURE_SQL_SERVER }}" \
            -U "${{ secrets.AZURE_SQL_USER }}" \
            -d "${{ secrets.AZURE_SQL_DB }}" \
            -v DBName="${{ secrets.AZURE_SQL_DB }}" IncludeSeeds="${{ github.event.inputs.includeSeeds }}" \
            -i "./deploy_all.sql"
