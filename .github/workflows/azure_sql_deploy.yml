name: Azure SQL – Deploy

on:
  workflow_dispatch:
    inputs:
      includeSeeds:
        description: "Include seed data? 1=yes, 0=no"
        required: true
        default: "1"
        type: choice
        options: ["1", "0"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install sqlcmd
        run: |
          sudo ACCEPT_EULA=Y apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18 unixodbc-dev
          echo '/opt/mssql-tools18/bin' >> $GITHUB_PATH
      - run: sqlcmd -?

      # Diagnostics: list DBs on server, then confirm target DB context
      - name: Diagnostic — list databases on server
        env:
          SQLCMDPASSWORD: ${{ secrets.AZURE_SQL_PASSWORD }}
        run: |
          echo "Server: ${{ secrets.AZURE_SQL_SERVER }}"
          echo "User:   ${{ secrets.AZURE_SQL_USER }}"
          echo "Target DB: ${{ secrets.AZURE_SQL_DB }}"
          sqlcmd -C -b -I -l 60 \
            -S "${{ secrets.AZURE_SQL_SERVER }}" \
            -U "${{ secrets.AZURE_SQL_USER }}" \
            -d master \
            -Q "SELECT name FROM sys.databases ORDER BY name;"

      - name: Diagnostic — connect to target DB
        env:
          SQLCMDPASSWORD: ${{ secrets.AZURE_SQL_PASSWORD }}
        run: |
          sqlcmd -C -b -I -l 60 \
            -S "${{ secrets.AZURE_SQL_SERVER }}" \
            -U "${{ secrets.AZURE_SQL_USER }}" \
            -d "${{ secrets.AZURE_SQL_DB }}" \
            -Q "SELECT DB_NAME() AS CurrentDb;"

      - name: Run deploy_all.sql (from db/scripts)
        working-directory: db/scripts
        env:
          SQLCMDPASSWORD: ${{ secrets.AZURE_SQL_PASSWORD }}
        run: |
          sqlcmd -C -b -I -l 60 \
            -S "${{ secrets.AZURE_SQL_SERVER }}" \
            -U "${{ secrets.AZURE_SQL_USER }}" \
            -d "${{ secrets.AZURE_SQL_DB }}" \
            -v DBName="${{ secrets.AZURE_SQL_DB }}" IncludeSeeds="${{ github.event.inputs.includeSeeds }}" \
            -i "./deploy_all.sql"
